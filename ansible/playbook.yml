---
-
  hosts: all
  tasks:
    -
      apt:
        update_cache: true
        upgrade: true
      become: true
      name: "update and upgrade apt packages"
    -
      lineinfile:
        dest: /boot/config.txt
        insertafter: EOF
        line: gpu_mem=16
        regexp: "^#?gpu_mem"
        state: present
      name: "Configure gpu memory options in /boot/config.txt"
    -
      async: 1
      become: true
      name: "restart server if required"
      poll: 0
      shell: "sleep 2 && shutdown -r now \"Reboot triggered by Ansible\" removes=/var/run/reboot-required"
    -
      become: false
      local_action:
        module: "wait_for host={{ inventory_hostname }} port=22 delay=10"
      name: "Wait for server to restart"
    -
      name: "set timezone to Europe/London"
      timezone:
        name: Europe/London
    -
      become: true
      hostname:
        name: understairs
      name: "Ensure the hostname is set correctly"
    -
      apt:
        name: fail2ban
        state: present
        update_cache: true
      name: "install fail2ban package"
    -
      become: true
      copy:
        dest: /etc/fail2ban/jail.local
        remote_src: true
        src: /etc/fail2ban/jail.conf
      name: "copy fail2ban configuration"
    -
      apt:
        name: dirmngr
        state: present
      name: "Install the package \"dirmngr\""
    -
      apt_key:
        id: 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
        keyserver: keyserver.ubuntu.com
      name: "Add an apt key by id from a keyserver"
    -
      apt_repository:
        filename: mono-official
        repo: "deb http://download.mono-project.com/repo/debian stable-raspbianstretch main"
        state: present
      name: "Add mono repo"
    -
      apt:
        name: mono-complete
        update_cache: true
      name: "Update repositories cache and install \"mono-complete\" package"
    -
      apt: "name={{item}} state=latest update_cache=yes"
      name: "install dot net core / powershell pre-req packages"
      with_items:
        - libunwind8
        - libunwind8-dev
        - gettext
        - libicu-dev
        - liblttng-ust-dev
        - libcurl4-openssl-dev
        - uuid-dev
    -
      file:
        mode: 493
        path: /home/pi/dotnet
        state: directory
      name: "Create dotnet directory if it does not exist"
    -
      name: "Get dotnet core"
      unarchive:
        creates: /home/pi/dotnet
        dest: /home/pi/dotnet
        remote_src: true
        src: "https://github.com/dotnet/core-setup/files/716356/dotnet-ubuntu.16.04-arm.1.2.0-beta-001291-00.tar.gz"
    -
      file:
        mode: 493
        path: /home/pi/powershell
        state: directory
      name: "Create powershell directory if it does not exist"
    -
      name: "Get Powershell 6 core"
      unarchive:
        creates: /home/pi/powershell
        dest: /home/pi/powershell
        remote_src: true
        src: "https://github.com/PowerShell/PowerShell/releases/download/v6.0.1/powershell-6.0.1-linux-arm32.tar.gz"
    -
      name: "creating user davidw and adding to groups"
      user:
        append: true
        groups: "pi,adm,dialout,cdrom,sudo,audio,video,plugdev,games,users,input,netdev,spi,i2c,gpio"
        name: davidw
        shell: /bin/bash
    -
      authorized_key:
        key: "https://github.com/davidwallis3101.keys"
        state: present
        user: davidw
      name: "Set authorized key for user davidw"
    -
      file:
        mode: 493
        path: /usr/local/bin/homegenie
        state: directory
      name: "Create homegenie directory if it does not exist"
    -
      name: "Get Homegenie"
      unarchive:
        creates: /usr/local/bin/homegenie/Homegenie.exe
        dest: /usr/local/bin/homegenie
        src: HGBE_V1.1.17.30.zip
    -
      copy:
        content: |
            [Unit]
            Description=HomeGenie Automation Server
            After=network.target

            [Service]
            WorkingDirectory=/usr/local/bin/homegenie
            ExecStart=/usr/bin/mono /usr/local/bin/homegenie/HomeGenie.exe --log
            ExecStop=/usr/local/bin/homegenie/homegenie/homegenie_stop.sh
            Restart=always
            TimeoutStopSec=90

            [Install]
            WantedBy=multi-user.target
        dest: /etc/systemd/system/homegenie.service
      name: "Create systemd file"
    -
      name: "Enable service homegenie"
      systemd:
        enabled: true
        masked: false
        name: homegenie
    -
      name: "start homegenie service if not running"
      systemd: "state=started name=homegenie"
    -
      become: true
      lineinfile:
        line: "PasswordAuthentication no"
        path: /etc/ssh/sshd_config
        regexp: "^#?PasswordAuthentication"
      name: "Disable SSH Password logins"
    -
      copy:
        content: "davidw ALL=(ALL) NOPASSWD: ALL"
        dest: /etc/sudoers.d/020_davidw-nopasswd
        mode: 288
      name: "Add sudoers entry to allow admin user passwordless sudo"
